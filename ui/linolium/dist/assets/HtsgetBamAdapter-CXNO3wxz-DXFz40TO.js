import"./remoteFile-DvhH--az-9OF1arfw.js";import{x as b}from"./unzip-CwWdnRSo-02Ze3MCz.js";import{b as k,B as T,a as x,p as y,c as A}from"./BamAdapter-Apr6WrUL-fcnWkf5o.js";import"./taxonium-component.es-D8UFPkMd.js";import"./index-Bwk-R6QR.js";import"./JBrowsePanel-CjeUdi3D-Dhrr89W5.js";import"./index-CJFOLICt-oWu2Snlz.js";import"./crc32-CxoSWZf_-CJxmRem5.js";import"./browser-BpRiKmO--zAOSyNoU.js";import"./index-Bp4pXTEU-Cipcrd2k.js";import"./QuickLRU-Bsq1VS-k-DOcaC3o-.js";import"./rxjs-euq-mp90-DvajfGj-.js";async function p(d,t){const a=await Promise.all(d.map(async e=>{const{url:r,headers:o}=e;if(r.startsWith("data:")){const i=await fetch(r);if(!i.ok)throw new Error("failed to decode base64");const n=await i.arrayBuffer();return new Uint8Array(n)}else{const{referer:i,...n}=o,s=await fetch(r,{...t,headers:{...t==null?void 0:t.headers,...n}});if(!s.ok)throw new Error(`HTTP ${s.status} fetching ${r}: ${await s.text()}`);return new Uint8Array(await s.arrayBuffer())}}));return A(await Promise.all(a.map(e=>b(e))))}class I extends T{constructor(t){super({htsget:!0}),this.baseUrl=t.baseUrl,this.trackId=t.trackId}async*streamRecordsForRange(t,a,e,r){var o;const i=`${`${this.baseUrl}/${this.trackId}`}?referenceName=${t}&start=${a}&end=${e}&format=BAM`,n=(o=this.chrToIndex)==null?void 0:o[t];if(n===void 0)yield[];else{const s=await fetch(i,{...r});if(!s.ok)throw new Error(`HTTP ${s.status} fetching ${i}: ${await s.text()}`);const c=await s.json(),f=await p(c.htsget.urls.slice(1),r);yield*this._fetchChunkFeatures([{buffer:f,_fetchedSize:void 0,bin:0,compareTo(){return 0},toUniqueString(){return`${t}_${a}_${e}`},fetchedSize(){return 0},minv:{dataPosition:0,blockPosition:0,compareTo:()=>0},maxv:{dataPosition:Number.MAX_SAFE_INTEGER,blockPosition:0,compareTo:()=>0},toString(){return`${t}_${a}_${e}`}}],n,a,e,r)}}async _readChunk({chunk:t}){if(!t.buffer)throw new Error("expected chunk.buffer in htsget");return{data:t.buffer,cpositions:[],dpositions:[],chunk:t}}async getHeader(t={}){const a=`${this.baseUrl}/${this.trackId}?referenceName=na&class=header`,e=await fetch(a,t);if(!e.ok)throw new Error(`HTTP ${e.status} fetching ${a}: ${await e.text()}`);const r=await e.json(),o=await p(r.htsget.urls,t),i=new DataView(o.buffer);if(i.getInt32(0,!0)!==x)throw new Error("Not a BAM file");const n=i.getInt32(4,!0),s=new TextDecoder("utf8").decode(o.subarray(8,8+n)),c=y(s),f=[],l={},g=c.filter(h=>h.tag==="SQ");for(const[h,$]of g.entries()){let w="",m=0;for(const u of $.data)u.tag==="SN"?w=u.value:u.tag==="LN"&&(m=+u.value);l[w]=h,f[h]={refName:w,length:m}}return this.chrToIndex=l,this.indexToChr=f,c}}class q extends k{async configurePre(){const t=this.getConf("htsgetBase"),a=this.getConf("htsgetTrackId"),e=new I({baseUrl:t,trackId:a}),r=this.getConf("sequenceAdapter");if(r&&this.getSubAdapter){const o=await this.getSubAdapter(r);return{bam:e,sequenceAdapter:o.dataAdapter}}return{bam:e}}}export{q as default};
