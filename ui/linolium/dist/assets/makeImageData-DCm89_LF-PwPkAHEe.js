import{O as z,u as G,ak as K}from"./JBrowsePanel-CjeUdi3D-Dhrr89W5.js";import{k as Q,e as n,p as U,v as V}from"./drawPhased-ExmTWoR2-BQ7uHNxE.js";import"./index-Bwk-R6QR.js";import"./taxonium-component.es-D8UFPkMd.js";import"./util-B1Sm35mH-zsEGfboc.js";async function et({ctx:i,canvasWidth:C,canvasHeight:F,renderArgs:H}){const{renderingMode:I,minorAlleleFrequencyFilter:X,sources:d,features:Y,stopToken:T,lengthCutoffFilter:$}=H,{statusCallback:O=()=>{}}=H,u=F/d.length;z.checkStopToken(T);const g=await G.updateStatus("Calculating stats",O,()=>K({stopToken:T,features:Y.values(),minorAlleleFrequencyFilter:X,lengthCutoffFilter:$}));z.checkStopToken(T);const W=[],J=g.length,p=C/J;return await G.updateStatus("Drawing variant matrix",O,()=>{const A={};G.forEachWithStopTokenCheck(g,T,({feature:P,mostFrequentAlt:_},w)=>{var R,b,x;const D=[];if(!((R=P.get("FORMAT"))===null||R===void 0)&&R.includes("PS")){const M=P.get("samples"),a=w/g.length*C,m=d.length;for(let l=0;l<m;l++){const c=l/m*F,{name:j,HP:q}=d[l],t=M[j];if(t){const s=(b=t.GT)===null||b===void 0?void 0:b[0];if(s){D.push(s);const o=s.includes("|");if(I==="phased")if(o){const e=(x=t.PS)===null||x===void 0?void 0:x[0],r=s.split("|");Q(r,i,a,c,p,u,q,e)}else i.fillStyle="black",i.fillRect(a-n,c-n,p+n,u+n);else{let e=A[s];if(e===void 0){let r=0,k=0,v=0,S=0;const y=s.split(/[/|]/),h=y.length;for(let f=0;f<h;f++){const E=y[f];E===_?r++:E==="0"?S++:E==="."?k++:v++}e=U(S,r,v,k,h,!0),A[s]=e}e&&V(e,i,a,c,p,u)}}}}}else{const M=P.get("genotypes"),a=w/g.length*C,m=d.length;for(let l=0;l<m;l++){const c=l/m*F,{name:j,HP:q}=d[l],t=M[j];if(t){D.push(t);const s=t.includes("|");if(I==="phased")if(s){const o=t.split("|");Q(o,i,a,c,p,u,q)}else i.fillStyle="black",i.fillRect(a-n,c-n,p+n,u+n);else{let o=A[t];if(o===void 0){let e=0,r=0,k=0,v=0;const S=t.split(/[/|]/),y=S.length;for(let h=0;h<y;h++){const f=S[h];f===_?e++:f==="0"?v++:f==="."?r++:k++}o=U(v,e,k,r,y,!0),A[t]=o}o&&V(o,i,a,c,p,u)}}}}W.push(D)})}),{mafs:g,arr:W}}export{et as makeImageData};
