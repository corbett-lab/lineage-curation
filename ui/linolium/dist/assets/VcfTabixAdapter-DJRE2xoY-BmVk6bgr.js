import{m as d}from"./tabixIndexedFile-kFQg_R3d-BgchFq_1.js";import"./unzip-CwWdnRSo-02Ze3MCz.js";import{Q as w,q as v}from"./index-BvvsWeUy-CPrgRp4B.js";import{e as C}from"./index-Bp4pXTEU-Cipcrd2k.js";import{a1 as g,u as p}from"./JBrowsePanel-CjeUdi3D-Dhrr89W5.js";import{o as y}from"./rxjs-euq-mp90-DvajfGj-.js";import"./AbortablePromiseCache-CcuMrnn7-56xRj2xE.js";import"./browser-BpRiKmO--zAOSyNoU.js";import"./remoteFile-DvhH--az-9OF1arfw.js";import"./taxonium-component.es-D8UFPkMd.js";import"./index-Bwk-R6QR.js";import"./index-CJFOLICt-oWu2Snlz.js";class H extends C.BaseFeatureDataAdapter{async configurePre(t){const e=this.getConf("vcfGzLocation"),n=this.getConf(["index","location"]),s=this.getConf(["index","indexType"]),i=g.openLocation(e,this.pluginManager),r=s==="CSI",o=new d({filehandle:i,csiFilehandle:r?g.openLocation(n,this.pluginManager):void 0,tbiFilehandle:r?void 0:g.openLocation(n,this.pluginManager),chunkCacheSize:50*2**20});return{vcf:o,parser:new w({header:await o.getHeader()})}}async configurePre2(){return this.configured||(this.configured=this.configurePre().catch(t=>{throw this.configured=void 0,t})),this.configured}async configure(t){const{statusCallback:e=()=>{}}=t||{};return p.updateStatus("Downloading index",e,()=>this.configurePre2())}async getRefNames(t={}){const{vcf:e}=await this.configure(t);return e.getReferenceSequenceNames(t)}async getHeader(t){const{vcf:e}=await this.configure(t);return e.getHeader()}async getMetadata(t){const{parser:e}=await this.configure(t);return e.getMetadata()}getFeatures(t,e={}){return y.ObservableCreate(async n=>{const{refName:s,start:i,end:r}=t,{statusCallback:o=()=>{}}=e,{vcf:l,parser:c}=await this.configure(e);await p.updateStatus("Downloading variants",o,()=>l.getLines(s,i,r,{lineCallback:(a,h)=>{n.next(new v({variant:c.parseLine(a),parser:c,id:`${this.id}-vcf-${h}`}))},...e})),n.complete()},e.stopToken)}async getSources(){const t=this.getConf("samplesTsvLocation");if(t.uri===""||t.uri==="/path/to/samples.tsv"){const{parser:e}=await this.configure();return e.samples.map(n=>({name:n}))}else{const e=(await p.fetchAndMaybeUnzipText(g.openLocation(t,this.pluginManager))).split(/\n|\r\n|\r/),n=e[0].split("	"),{parser:s}=await this.configure(),i=e.slice(1).filter(a=>!!a).map(a=>{const[h,...f]=a.split("	");return{...Object.fromEntries(n.slice(1).map((m,u)=>[m,f[u]||""])),name:h}}),r=new Set(s.samples),o=new Set(i.map(a=>a.name)),l=[...o].filter(a=>!r.has(a)),c=[...r].filter(a=>!o.has(a));return l.length&&console.warn(`There are ${l.length} samples in metadata file (${i.length} lines) not in VCF (${s.samples.length} samples):`,p.shorten2(l.join(","))),c.length&&console.warn(`There are ${c.length} samples in VCF file (${s.samples.length} samples) not in metadata file (${i.length} lines):`,p.shorten2(c.map(a=>a).join(","))),i.filter(a=>r.has(a.name))}}}export{H as default};
