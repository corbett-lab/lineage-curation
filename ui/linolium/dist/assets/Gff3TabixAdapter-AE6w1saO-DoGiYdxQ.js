import{m as N}from"./tabixIndexedFile-kFQg_R3d-BgchFq_1.js";import"./unzip-CwWdnRSo-02Ze3MCz.js";import{e as v}from"./index-Bp4pXTEU-Cipcrd2k.js";import{a1 as l,u as h,aI as C}from"./JBrowsePanel-CjeUdi3D-Dhrr89W5.js";import{o as b}from"./rxjs-euq-mp90-DvajfGj-.js";import{m as x}from"./simpleFeature-CxppDrI6-CpRiIJat.js";import{L as y,q as F}from"./featureData-Bm8gwGZK-C5GIydBc.js";import"./AbortablePromiseCache-CcuMrnn7-56xRj2xE.js";import"./browser-BpRiKmO--zAOSyNoU.js";import"./remoteFile-DvhH--az-9OF1arfw.js";import"./taxonium-component.es-D8UFPkMd.js";import"./index-Bwk-R6QR.js";import"./index-CJFOLICt-oWu2Snlz.js";var L=C();class z extends v.BaseFeatureDataAdapter{async configurePre(e){const t=this.getConf("gffGzLocation"),a=this.getConf(["index","indexType"]),n=this.getConf(["index","location"]),f=this.getConf("dontRedispatch"),c=new N({filehandle:l.openLocation(t,this.pluginManager),csiFilehandle:a==="CSI"?l.openLocation(n,this.pluginManager):void 0,tbiFilehandle:a!=="CSI"?l.openLocation(n,this.pluginManager):void 0,chunkCacheSize:50*2**20,renameRefSeqs:d=>d});return{gff:c,dontRedispatch:f,header:await c.getHeader()}}async configurePre2(){return this.configured||(this.configured=this.configurePre().catch(e=>{throw this.configured=void 0,e})),this.configured}async configure(e){const{statusCallback:t=()=>{}}=e||{};return h.updateStatus("Downloading index",t,()=>this.configurePre2())}async getRefNames(e={}){const{gff:t}=await this.configure(e);return t.getReferenceSequenceNames(e)}async getHeader(e={}){const{gff:t}=await this.configure(e);return t.getHeader()}getFeatures(e,t={}){return b.ObservableCreate(async a=>{const{gff:n}=await this.configure(t),f=await n.getMetadata();await this.getFeaturesHelper(e,t,f,a,!0)},t.stopToken)}async getFeaturesHelper(e,t,a,n,f,c=e){var d,u;const{statusCallback:p=()=>{}}=t;try{const o=[],{dontRedispatch:m,gff:w}=await this.configure(t);if(await h.updateStatus("Downloading features",p,()=>w.getLines(e.refName,e.start,e.end,(i,s)=>{o.push(this.parseLine(a.columnNumbers,i,s))})),f&&o.length){let i=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY;for(const r of o){const H=r.fields[2];if(!m.includes(H)){const g=r.start-1;g<i&&(i=g),r.end>s&&(s=r.end)}}if(s>e.end||i<e.start){await this.getFeaturesHelper({...e,start:i,end:s},t,a,n,!1,e);return}}const I=o.map(i=>(i.fields[8]&&i.fields[8]!=="."?i.fields[8].includes("_lineHash")||(i.fields[8]+=`;_lineHash=${i.lineHash}`):i.fields[8]=`_lineHash=${i.lineHash}`,i.fields.join("	"))).join(`
`);for(const i of y(I))for(const s of i){const r=new x({data:F(s),id:`${this.id}-offset-${(u=(d=s.attributes)===null||d===void 0?void 0:d._lineHash)===null||u===void 0?void 0:u[0]}`});L.doesIntersect2(r.get("start"),r.get("end"),c.start,c.end)&&n.next(r)}n.complete()}catch(o){n.error(o)}}parseLine(e,t,a){const n=t.split("	");return{start:+n[e.start-1],end:+n[e.end-1],lineHash:a,fields:n}}}export{z as default};
